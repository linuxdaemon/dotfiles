source {{ joinPath .chezmoi.sourceDir "lib" "common" "functions.sh" | quote }}

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='code --wait'
fi

export GIT_EDITOR="$EDITOR"
export VISUAL="$EDITOR"

source_if_exists .aliases

{{ if $.gui -}}
test -e "$HOME/.iterm2_shell_integration.zsh" && source "$HOME/.iterm2_shell_integration.zsh"
{{ end -}}

{{ if has "personal" $.tags -}}
hash -d Documents="$HOME/Library/CloudStorage/SynologyDrive-1/Documents"
hash -d Code="$HOME/Library/CloudStorage/SynologyDrive-1/Documents/Code"
{{ end -}}

brew_get_formula_path() {
    local formula="$1"
    if ! has_cmd brew; then
        return 1
    fi

    brew --prefix --installed "$formula" 2>/dev/null && return 0
    has_cmd mbrew && mbrew --prefix --installed "$formula" 2>/dev/null && return 0
    has_cmd ibrew && ibrew --prefix --installed "$formula" 2>/dev/null && return 0
    return 1
}

brew_add_formula_bin() {
    if ! has_cmd brew; then
        return
    fi

    local formula_path="$(brew_get_formula_path "$1" || echo "none")"

    if [[ "$formula_path" != "none" ]]; then
        add_to_path "$formula_path/bin"
    fi
}

# Apple Silicon default brew path
mbrew_bin="/opt/homebrew/bin/brew"

# Intel default brew path
ibrew_default_bin="/usr/local/bin/brew"

# Alternate install location for x86 brew on Apple Silicon mac
ibrew_alt_bin="/usr/local/homebrew/bin/brew"

if [ -x "$ibrew_default_bin" ]; then
    ibrew_bin= "$ibrew_default_bin"
else
    ibrew_bin="$ibrew_alt_bin"
fi

add_ibrew() {
    if [ -x "$ibrew_bin" ]; then
        alias ibrew="arch -x86_64 $ibrew_bin"
        eval "$(ibrew shellenv zsh)"
        export FPATH="$HOMEBREW_PREFIX/share/zsh/site-functions${FPATH+:$FPATH}"
    fi
}

add_mbrew() {
    if [ -x "$mbrew_bin" ]; then
        alias mbrew="arch -arm64e $mbrew_bin"
        eval "$(mbrew shellenv zsh)"
        export FPATH="$HOMEBREW_PREFIX/share/zsh/site-functions${FPATH+:$FPATH}"
    fi
}

{{ if eq $.chezmoi.arch "arm64" -}}
add_ibrew
add_mbrew
{{ else -}}
add_ibrew
{{ end -}}

unset ibrew_bin mbrew_bin ibrew_default_bin mbrew_default_bin

source "$HOMEBREW_PREFIX/share/antigen/antigen.zsh"
antigen use oh-my-zsh
antigen theme agnoster
antigen apply

zstyle ':omz:update' mode auto      # update automatically without asking

if has_cmd brew; then
    gcloud_dir="$HOMEBREW_PREFIX/share/google-cloud-sdk"
    test -e "$gcloud_dir/path.zsh.inc" && source_if_exists "$gcloud_dir/path.zsh.inc"
    test -e "$gcloud_dir/completion.zsh.inc" && source_if_exists "$gcloud_dir/completion.zsh.inc"
    unset gcloud_dir

    source_if_exists "$HOMEBREW_PREFIX/opt/asdf/libexec/asdf.sh"
fi

if has_cmd direnv; then
    eval "$(direnv hook zsh)"
fi

{{ template "includeIfExists.tmpl" (joinPath $.chezmoi.homeDir ".zshrc.local") -}}

# We finished init, set up completions (OMZ does this above, but we add our own, so do it again)
autoload -Uz compinit
compinit

{{ template "includeIfExists.tmpl" (joinPath $.chezmoi.homeDir ".zsh_completion_aliases.local") -}}
